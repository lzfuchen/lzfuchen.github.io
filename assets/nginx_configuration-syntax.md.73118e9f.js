import{_ as s,c as n,o as a,a as l}from"./app.169c26a5.js";const A=JSON.parse('{"title":"配置语法","description":"","frontmatter":{},"headers":[{"level":2,"title":"配置结构","slug":"配置结构","link":"#配置结构","children":[]},{"level":2,"title":"main 全局块","slug":"main-全局块","link":"#main-全局块","children":[{"level":3,"title":"user","slug":"user","link":"#user","children":[]},{"level":3,"title":"pid","slug":"pid","link":"#pid","children":[]},{"level":3,"title":"worker_rlimit_nofile_number","slug":"worker-rlimit-nofile-number","link":"#worker-rlimit-nofile-number","children":[]},{"level":3,"title":"worker_rlimit_core","slug":"worker-rlimit-core","link":"#worker-rlimit-core","children":[]},{"level":3,"title":"worker_processes_number","slug":"worker-processes-number","link":"#worker-processes-number","children":[]},{"level":3,"title":"worker_cpu_affinity","slug":"worker-cpu-affinity","link":"#worker-cpu-affinity","children":[]},{"level":3,"title":"worker_priority","slug":"worker-priority","link":"#worker-priority","children":[]},{"level":3,"title":"worker_shutdown_timeout","slug":"worker-shutdown-timeout","link":"#worker-shutdown-timeout","children":[]},{"level":3,"title":"timer_resolution","slug":"timer-resolution","link":"#timer-resolution","children":[]},{"level":3,"title":"daemon","slug":"daemon","link":"#daemon","children":[]}]},{"level":2,"title":"events 块","slug":"events-块","link":"#events-块","children":[{"level":3,"title":"use","slug":"use","link":"#use","children":[]},{"level":3,"title":"worker_connections","slug":"worker-connections","link":"#worker-connections","children":[]},{"level":3,"title":"accept_mutex","slug":"accept-mutex","link":"#accept-mutex","children":[]}]},{"level":2,"title":"http 块","slug":"http-块","link":"#http-块","children":[]},{"level":2,"title":"server 块","slug":"server-块","link":"#server-块","children":[{"level":3,"title":"server_name","slug":"server-name","link":"#server-name","children":[]},{"level":3,"title":"root","slug":"root","link":"#root","children":[]},{"level":3,"title":"try_files","slug":"try-files","link":"#try-files","children":[]}]},{"level":2,"title":"location 块","slug":"location-块","link":"#location-块","children":[{"level":3,"title":"匹配命令","slug":"匹配命令","link":"#匹配命令","children":[]},{"level":3,"title":"匹配优先级","slug":"匹配优先级","link":"#匹配优先级","children":[]},{"level":3,"title":"反斜线","slug":"反斜线","link":"#反斜线","children":[]},{"level":3,"title":"alias","slug":"alias","link":"#alias","children":[]},{"level":3,"title":"return","slug":"return","link":"#return","children":[]},{"level":3,"title":"rewrite","slug":"rewrite","link":"#rewrite","children":[]},{"level":3,"title":"if 指令","slug":"if-指令","link":"#if-指令","children":[]},{"level":3,"title":"autoindex","slug":"autoindex","link":"#autoindex","children":[]}]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"自定义变量","slug":"自定义变量","link":"#自定义变量","children":[]},{"level":3,"title":"内置预定义变量","slug":"内置预定义变量","link":"#内置预定义变量","children":[]}]}],"relativePath":"nginx/configuration-syntax.md"}'),e={name:"nginx/configuration-syntax.md"},o=l(`<h1 id="配置语法" tabindex="-1">配置语法 <a class="header-anchor" href="#配置语法" aria-hidden="true">#</a></h1><p>更多详细配置请查阅：<a href="https://nginx.org/en/docs/" target="_blank" rel="noreferrer">Nginx 官方文档</a> 或 <a href="https://www.nginx.cn/doc/" target="_blank" rel="noreferrer">Nginx 中文文档</a></p><h2 id="配置结构" tabindex="-1">配置结构 <a class="header-anchor" href="#配置结构" aria-hidden="true">#</a></h2><p>Nginx 配置的核心是定义要处理的 <code>URL</code> 以及如何响应这些 <code>URL</code> 请求，即定义一系列的 <strong>虚拟服务器（Virtual Servers）</strong> 控制对来自特定域名或者 IP 的请求的处理。每一个虚拟服务器定义一系列的 <code>location</code> 控制处理特定的 URI 集合。每一个 <code>location</code> 定义了对映射到自己的请求的处理场景，可以返回一个文件或者代理此请求。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># main 全局块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># Events 块</span></span>
<span class="line"><span style="color:#A6ACCD;">events </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># Http 块</span></span>
<span class="line"><span style="color:#676E95;"># 配置使用最频繁的部分，代理、缓存、日志定义等绝大多数功能和第三方模块的配置都在这里设置</span></span>
<span class="line"><span style="color:#A6ACCD;">http </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;"># Server 块</span></span>
<span class="line"><span style="color:#A6ACCD;">  server </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;"># Location 块</span></span>
<span class="line"><span style="color:#A6ACCD;">    location </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">PATTERN</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    location </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">PATTERN</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> {}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><code>main</code>：Nginx 的全局配置，对全局生效</li><li><code>events</code>：配置影响 Nginx 服务器或与用户的网络连接</li><li><code>http</code>：可以嵌套多个 Server，配置代理、缓存、日志定义等绝大多数功能和第三方模块的配置</li><li><code>server</code>：配置虚拟主机的相关参数，一个 HTTP 中可以有多个 <code>server</code> 块</li><li><code>location</code>：用于配置请求的路由，以及各种页面的处理情况</li><li><code>upstream</code>：配置后端服务器具体地址，负载均衡配置不可或缺的部分</li></ul><p>配置文件的语法规则：</p><ul><li>配置文件由指定的指令控制，指令分为 <strong>简单指令</strong> 与 <strong>指令块</strong> 构成</li><li>简单指令包含 <strong>指令名称</strong> 和 <strong>指令参数</strong></li><li>指令与参数间以空格符号分隔，每条指令以 <code>;</code> 分号结尾</li><li>指令块以 <code>{}</code> 大括号将多条指令组织在一起</li><li><code>include</code> 语句允许组合多个配置文件以提升可维护性</li><li>使用 <code>#</code> 符号添加注释，提高可读性</li><li>使用 <code>$</code> 符号使用变量</li><li>部分指令的参数支持正则表达式</li></ul><h2 id="main-全局块" tabindex="-1">main 全局块 <a class="header-anchor" href="#main-全局块" aria-hidden="true">#</a></h2><p>该部分配置用于设置影响 Nginx 全局的指令，通常包括以下几个部分：</p><ul><li>配置运行 Nginx 服务器用户（组）</li><li>worker process 数</li><li>Nginx 进程 PID 存放路径</li><li>错误日志的存放路径</li><li>配置文件引入</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 配置运行 Nginx 服务器用户（组）</span></span>
<span class="line"><span style="color:#89DDFF;">user </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 错误日志的存放路径</span></span>
<span class="line"><span style="color:#89DDFF;">error_log </span><span style="color:#A6ACCD;">/var/log/nginx/error.log</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># Nginx 进程 PID 存放路径</span></span>
<span class="line"><span style="color:#89DDFF;">pid </span><span style="color:#A6ACCD;">/run/nginx.pid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 设置工作进程数量</span></span>
<span class="line"><span style="color:#89DDFF;">worker_process</span><span style="color:#A6ACCD;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 配置文件引入</span></span>
<span class="line"><span style="color:#89DDFF;">include </span><span style="color:#A6ACCD;">/usr/share/nginx/modules/*.conf</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="user" tabindex="-1">user <a class="header-anchor" href="#user" aria-hidden="true">#</a></h3><p>指定运行 Nginx 的 <code>woker</code> 子进程的属主和属组，其中组可以不指定。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">user </span><span style="color:#A6ACCD;">&lt;USERNAME&gt; [GROUP]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 用户是 nginx; 组是 dev</span></span>
<span class="line"><span style="color:#A6ACCD;">user nginx dev</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="pid" tabindex="-1">pid <a class="header-anchor" href="#pid" aria-hidden="true">#</a></h3><p>指定运行 Nginx <code>master</code> 主进程的 <code>pid</code> 文件存放路径。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># master 主进程的的 pid 存放在 nginx.pid 的文件</span></span>
<span class="line"><span style="color:#89DDFF;">pid </span><span style="color:#A6ACCD;">/opt/nginx/logs/nginx.pid</span></span>
<span class="line"></span></code></pre></div><h3 id="worker-rlimit-nofile-number" tabindex="-1">worker_rlimit_nofile_number <a class="header-anchor" href="#worker-rlimit-nofile-number" aria-hidden="true">#</a></h3><p>指定 <code>worker</code> 子进程可以打开的最大文件句柄数。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 可以理解成每个 worker 子进程的最大连接数量</span></span>
<span class="line"><span style="color:#89DDFF;">worker_rlimit_nofile </span><span style="color:#A6ACCD;">20480</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="worker-rlimit-core" tabindex="-1">worker_rlimit_core <a class="header-anchor" href="#worker-rlimit-core" aria-hidden="true">#</a></h3><p>指定 <code>worker</code> 子进程异常终止后的 <code>core</code> 文件，用于记录分析问题。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 存放大小限制</span></span>
<span class="line"><span style="color:#89DDFF;">worker_rlimit_core </span><span style="color:#A6ACCD;">50M</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;"># 存放目录</span></span>
<span class="line"><span style="color:#89DDFF;">working_directory </span><span style="color:#A6ACCD;">/opt/nginx/tmp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="worker-processes-number" tabindex="-1">worker_processes_number <a class="header-anchor" href="#worker-processes-number" aria-hidden="true">#</a></h3><p>指定 Nginx 启动的 <code>worker</code> 子进程数量。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 指定具体子进程数量</span></span>
<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;"># 与当前cpu物理核心数一致</span></span>
<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;">auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="worker-cpu-affinity" tabindex="-1">worker_cpu_affinity <a class="header-anchor" href="#worker-cpu-affinity" aria-hidden="true">#</a></h3><p>将每个 <code>worker</code> 子进程与我们的 <code>cpu</code> 物理核心绑定。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 4 个物理核心，4 个 worker 子进程</span></span>
<span class="line"><span style="color:#89DDFF;">worker_cpu_affinity </span><span style="color:#A6ACCD;">0001 </span><span style="color:#F78C6C;">0010</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0100</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>将每个 <code>worker</code> 子进程与特定 CPU 物理核心绑定，优势在于，避免同一个 <code>worker</code> 子进程在不同的 CPU 核心上切换，缓存失效，降低性能。但其并不能真正的避免进程切换。</p><h3 id="worker-priority" tabindex="-1">worker_priority <a class="header-anchor" href="#worker-priority" aria-hidden="true">#</a></h3><p>指定 <code>worker</code> 子进程的 <code>nice</code> 值，以调整运行 Nginx 的优先级，通常设定为负值，以优先调用 Nginx。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 120-10=110，110 就是最终的优先级</span></span>
<span class="line"><span style="color:#89DDFF;">worker_priority </span><span style="color:#A6ACCD;">-10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Linux 默认进程的优先级值是 120，值越小越优先； <code>nice</code> 定范围为 <code>-20</code> 到 <code>+19</code> 。</p><p><strong>备注</strong>：应用的默认优先级值是 120 加上 <code>nice</code> 值等于它最终的值，这个值越小，优先级越高。</p><h3 id="worker-shutdown-timeout" tabindex="-1">worker_shutdown_timeout <a class="header-anchor" href="#worker-shutdown-timeout" aria-hidden="true">#</a></h3><p>指定 <code>worker</code> 子进程优雅退出时的超时时间。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">worker_shutdown_timeout </span><span style="color:#A6ACCD;">5s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="timer-resolution" tabindex="-1">timer_resolution <a class="header-anchor" href="#timer-resolution" aria-hidden="true">#</a></h3><p><code>worker</code> 子进程内部使用的计时器精度，调整时间间隔越大，系统调用越少，有利于性能提升；反之，系统调用越多，性能下降。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">timer_resolution </span><span style="color:#A6ACCD;">100ms</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>在 Linux 系统中，用户需要获取计时器时需要向操作系统内核发送请求，有请求就必然会有开销，因此这个间隔越大开销就越小。</p><h3 id="daemon" tabindex="-1">daemon <a class="header-anchor" href="#daemon" aria-hidden="true">#</a></h3><p>指定 Nginx 的运行方式，前台还是后台，前台用于调试，后台用于生产。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 默认是 on，后台运行模式</span></span>
<span class="line"><span style="color:#89DDFF;">daemon </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="events-块" tabindex="-1">events 块 <a class="header-anchor" href="#events-块" aria-hidden="true">#</a></h2><p><code>events</code> 块配置影响 Nginx 服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</p><p>该部分配置主要影响 Nginx 服务器与用户的网络连接，主要包括：</p><ul><li>设置网络连接的序列化</li><li>是否允许同时接收多个网络连接</li><li>事件驱动模型的选择</li><li>最大连接数的配置</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 处理连接</span></span>
<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 默认使用的网络 I/O 模型，Linux 系统推荐采用 epoll 模型，FreeBSD 推荐采用 kqueue 模型</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># use epoll;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 设置连接数</span></span>
<span class="line"><span style="color:#A6ACCD;">  worker_connections: 1024;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="use" tabindex="-1">use <a class="header-anchor" href="#use" aria-hidden="true">#</a></h3><p>Nginx 使用何种事件驱动模型。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 不推荐配置它，让 Nginx 自己选择</span></span>
<span class="line"><span style="color:#89DDFF;">use </span><span style="color:#A6ACCD;">&lt;method&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><code>method</code> 的可选值：</p><ul><li><code>select</code></li><li><code>poll</code></li><li><code>kqueue</code></li><li><code>epoll</code></li><li><code>/dev/poll</code></li><li><code>eventport</code></li></ul><h3 id="worker-connections" tabindex="-1">worker_connections <a class="header-anchor" href="#worker-connections" aria-hidden="true">#</a></h3><p><code>worker</code> 子进程能够处理的最大并发连接数。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 每个子进程的最大连接数为1024</span></span>
<span class="line"><span style="color:#89DDFF;">worker_connections </span><span style="color:#A6ACCD;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="accept-mutex" tabindex="-1">accept_mutex <a class="header-anchor" href="#accept-mutex" aria-hidden="true">#</a></h3><p>是否打开负载均衡互斥锁。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 默认是 off 关闭的，这里推荐打开</span></span>
<span class="line"><span style="color:#89DDFF;">accept_mutex </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="http-块" tabindex="-1">http 块 <a class="header-anchor" href="#http-块" aria-hidden="true">#</a></h2><p><code>http</code> 块可以嵌套多个 <code>server</code>，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，<code>mime-type</code> 定义，日志自定义，是否使用 <code>sendfile</code> 传输文件，连接超时时间，单连接请求数等。</p><ul><li>定义 MIMI-Type</li><li>自定义服务日志</li><li>允许 sendfile 方式传输文件</li><li>连接超时时间</li><li>单连接请求数上限</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 文件拓展名查找集合</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">  mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 当查找不到对应类型的时候默认值</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;">   application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 日志格式，定义别名为 main</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> log_format </span><span style="color:#A6ACCD;">main </span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#C3E88D;"> - </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_user</span><span style="color:#C3E88D;"> [</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">time_local</span><span style="color:#C3E88D;">] &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#C3E88D;">&quot; &#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">status</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">body_bytes_sent</span><span style="color:#C3E88D;"> &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_referer</span><span style="color:#C3E88D;">&quot; &#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                  </span><span style="color:#C3E88D;">&#39;&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_user_agent</span><span style="color:#C3E88D;">&quot; &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_x</span><span style="color:#C3E88D;">&quot;_forwarded_for&quot;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 指定日志输入目录</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;">logs/access.log</span><span style="color:#89DDFF;"> main;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 调用 sendfile 系统传输文件，开启高效传输模式</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># sendfile 开启的情况下，提高网络包的传输效率（等待，一次传输）</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 减少网络报文段的数量</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> tcp_nopush </span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 客户端与服务器连接超时时间，超时自动断开</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># keepalive_timeout   0;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 开启 Gzip 压缩</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> gzip </span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;"> on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># proxy_cache_path /nginx/cache levels=1:2 keys_zone=mycache:16m inactive=24h max_size=1g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 当存在多个域名的时候，如果所有配置都写在 nginx.conf 主配置文件中，难免显得杂乱无章</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 为了方便维护，可以进行拆分配置</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">/etc/nginx/conf.d/*.conf</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 虚拟主机</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 省略，详细配置看 server 块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 位置路由，详细配置看 location 块</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 引入其他的配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">servers/*</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="server-块" tabindex="-1">server 块 <a class="header-anchor" href="#server-块" aria-hidden="true">#</a></h2><p><code>server</code> 块：配置虚拟主机的相关参数，一个 <code>http</code> 中可以有多个 <code>server</code>。</p><ul><li>配置网络监听</li><li>基于名称的虚拟主机配置</li><li>基于 IP 的虚拟主机配置</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 虚拟主机</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">8080</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 浏览器访问域名</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">    domain.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> charset </span><span style="color:#A6ACCD;">utf-8</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;"> logs/domain.access.log  access</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 路由</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 访问根目录</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">   www</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">  index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="server-name" tabindex="-1">server_name <a class="header-anchor" href="#server-name" aria-hidden="true">#</a></h3><p>指定虚拟主机域名。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">server_name </span><span style="color:#A6ACCD;">&lt;name1&gt; &lt;name2&gt; &lt;name3&gt; ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 示例：</span></span>
<span class="line"><span style="color:#A6ACCD;">server_name www.nginx.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>域名匹配的四种写法：</p><ul><li>精确匹配：<code>server_name www.nginx.com</code></li><li>左侧通配：<code>server_name *.nginx.com</code></li><li>右侧通配：<code>server_name www.nginx.*</code></li><li>正则匹配：<code>server_name ~^www\\.nginx\\.*$</code></li></ul><p>匹配优先级： <strong>精准匹配</strong> &gt; <strong>左侧通配符匹配</strong> &gt; <strong>右侧通配符匹配</strong> &gt; <strong>正则表达式匹配</strong></p><p><code>server_name</code> 配置实例：</p><ol><li>配置本地 DNS 解析 <code>vim /etc/hosts</code>（macOS 系统）</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 添加如下内容，其中 121.42.11.34 是云服务器的 IP 地址</span></span>
<span class="line"><span style="color:#A6ACCD;">121.42.11.34 www.nginx-test.com</span></span>
<span class="line"><span style="color:#A6ACCD;">121.42.11.34 mail.nginx-test.com</span></span>
<span class="line"><span style="color:#A6ACCD;">121.42.11.34 www.nginx-test.org</span></span>
<span class="line"><span style="color:#A6ACCD;">121.42.11.34 doc.nginx-test.com</span></span>
<span class="line"><span style="color:#A6ACCD;">121.42.11.34 www.nginx-test.cn</span></span>
<span class="line"><span style="color:#A6ACCD;">121.42.11.34 fe.nginx-test.club</span></span>
<span class="line"></span></code></pre></div><p><strong>注意</strong>：这里使用的是虚拟域名进行测试，因此需要配置本地 DNS 解析，如果使用云服务提供商（例如阿里云）上购买的域名，则需要在云服务提供商上设置好域名解析。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 这里只列举了 http 端中的 sever 端配置</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 左匹配</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">   *.nginx-test.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">          /usr/share/nginx/html/nginx-test/left-match/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 正则匹配</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">~</span><span style="color:#C3E88D;">^.*\\.nginx-test\\..*$</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">         /usr/share/nginx/html/nginx-test/reg-match/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 右匹配</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">  www.nginx-test.*</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">         /usr/share/nginx/html/nginx-test/right-match/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 完全匹配</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">  www.nginx-test.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">         /usr/share/nginx/html/nginx-test/all-match/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ol start="3"><li>访问分析</li></ol><ul><li>当访问 <code>www.nginx-test.com</code> 时，都可以被匹配上，因此选择优先级最高的完全匹配</li><li>当访问 <code>mail.nginx-test.com</code> 时，会进行左匹配</li><li>当访问 <code>www.nginx-test.org</code> 时，会进行右匹配</li><li>当访问 <code>doc.nginx-test.com</code> 时，会进行左匹配</li><li>当访问 <code>www.nginx-test.cn</code> 时，会进行右匹配</li><li>当访问 <code>fe.nginx-test.club</code> 时，会进行正则匹配</li></ul><h3 id="root" tabindex="-1">root <a class="header-anchor" href="#root" aria-hidden="true">#</a></h3><p>指定静态资源目录位置，它可以写在 <code>http</code>、<code>servr</code>、<code>location</code> 块等配置中。</p><p><code>root</code> 与 <code>alias</code> 的区别主要在于 Nginx 如何解释 <code>location</code> 后面的路径的 URI，这会使两者分别以不同的方式将请求映射到服务器文件上。具体来看：</p><ul><li><code>root</code> 的处理结果是：<code>root</code> 路径 + <code>location</code> 路径</li><li><code>alias</code> 的处理结果是：使用 <code>alias</code> 路径替换 <code>location</code> 路径</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">root </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 例如</span></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/image </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/opt/nginx/static</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>当用户访问 <code>www.test.com/image/1.png</code> 时，实际在服务器找的路径是 <code>/opt/nginx/static/image/1.png</code>。</p><p>另一个例子：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">9001</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">  localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/hello </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">       /usr/local/var/www</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>在请求 <code>http://localhost:9001/hello</code> 时，服务器返回的路径地址应该是 <code>/usr/local/var/www/hello/index.html</code>。</p><p><strong>注意</strong>：<code>root</code> 会将定义路径与 <code>URI</code> 叠加，<code>alias</code> 则只取定义路径。</p><h3 id="try-files" tabindex="-1">try_files <a class="header-anchor" href="#try-files" aria-hidden="true">#</a></h3><p><code>try_files</code> 的作用就是在匹配 location 的路径时，如果没有匹配到对应的路径的话，提供一个回退的方案。</p><p>工作原理：按顺序检查文件是否存在，返回第一个找到的文件或文件夹（结尾加斜线表示为文件夹），如果所有的文件或文件夹都找不到，会进行一个内部重定向到最后一个参数。</p><p>需要注意的是，只有最后一个参数可以引起一个内部重定向，之前的参数只设置内部 URI 的指向。最后一个参数是回退 URI 且必须存在，否则会出现内部 500 错误。命名的 <code>location</code> 也可以使用在最后一个参数中。</p><p>示例一：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">locaton / </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  try_files /app/cache/ </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri @fallback</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  index index.php index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>它将检测 <code>$document_root/app/cache/index.php</code>、<code>$document_root/app/cache/index.html</code> 和 <code>$document_root$uri</code> 是否存在，如果不存在将内部重定向到 <code>@fallback</code>（<code>@</code> 表示配置文件中预定义标记点）。</p><p>你也可以使用一个文件或者状态码（<code>=404</code>）作为最后一个参数，如果是最后一个参数是文件，那么这个文件必须存在。</p><p>在非根路径下使用 <code>try_files</code>，当我们希望在 <code>/test</code> 路径下部署一个路由使用 History 的 Vue 应用，那么可以使用如下的 Nginx 配置：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">           </span><span style="color:#F78C6C;">9001</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">      localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/test </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">           /usr/local/var/www/hello/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">          index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> try_files </span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri/ /test/index.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>这个时候：</p><ul><li>当 <code>/test</code> 路径下的请求，不会收到上面的配置影响</li><li>当访问 <code>/test</code> 时，会使用 <code>root</code> 的匹配规则，到服务器 <code>/usr/local/var/www/hello/test</code> 路径下寻找 <code>index.html</code> 文件</li><li>当访问 <code>/test/demo1</code> 时，会使用 <code>try_files</code> 的匹配规则，到 <code>root</code> 路径下去寻找最后一个参数 <code>/test/index.html</code> 的回退方案，也就是说去 <code>/usr/local/var/www/hello/test</code> 路径下寻找 <code>index.html</code> 文件</li></ul><h2 id="location-块" tabindex="-1">location 块 <a class="header-anchor" href="#location-块" aria-hidden="true">#</a></h2><p><code>location</code> 块：配置请求的路由，以及各种页面的处理情况。</p><ul><li>location 配置</li><li>请求根目录配置</li><li>更改 location 的 URI</li><li>网站默认首页配置</li></ul><h3 id="匹配命令" tabindex="-1">匹配命令 <a class="header-anchor" href="#匹配命令" aria-hidden="true">#</a></h3><p>不同模块指令关系：<code>server</code> 继承 <code>main</code>；<code>location</code> 继承 <code>server</code>；<code>upstream</code> 既不会继承指令也不会被继承，它有自己的特殊指令，不需要在其他地方的应用</p><p>Nginx 的路径分类：</p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">名称</th><th style="text-align:left;">说明</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;">空</td><td style="text-align:left;">普通前端匹配的路径</td><td style="text-align:left;">location 后没有参数直接跟着 <strong>标准 URI</strong>，表示前缀匹配，代表跟请求中的 URI 从头开始匹配。</td><td style="text-align:left;"><code>location / {}</code></td></tr><tr><td style="text-align:left;"><code>^~</code></td><td style="text-align:left;">精确匹配的路径</td><td style="text-align:left;">用于<strong>标准 URI</strong> 前，要求请求字符串与其精准匹配，成功则立即处理，nginx 停止搜索其他匹配。</td><td style="text-align:left;"><code>location ^~ / {}</code></td></tr><tr><td style="text-align:left;"><code>=</code></td><td style="text-align:left;">抢占式前缀匹配的路径</td><td style="text-align:left;">用于<strong>标准 URI</strong> 前，并要求一旦匹配到就会立即处理，不再去匹配其他的那些个正则 URI，一般用来匹配目录</td><td style="text-align:left;"><code>location = / {}</code></td></tr><tr><td style="text-align:left;"><code>~</code></td><td style="text-align:left;">正则匹配</td><td style="text-align:left;">用于<strong>正则 URI</strong> 前，表示 URI 包含正则表达式， <strong>区分</strong>大小写</td><td style="text-align:left;"><code>location @a {}</code></td></tr><tr><td style="text-align:left;"><code>~*</code></td><td style="text-align:left;">正则匹配</td><td style="text-align:left;">用于<strong>正则 URI</strong> 前， 表示 URI 包含正则表达式， <strong>不区分</strong>大小写</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>@</code></td><td style="text-align:left;">命名路径</td><td style="text-align:left;">@ 定义一个命名的 location，@ 定义的 locaiton 名字一般用在内部定向，例如 error_page, try_files 命令中。它的功能类似于编程中的 goto。</td><td style="text-align:left;"></td></tr></tbody></table><p>实例配置：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">www.nginx-test.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 只有当访问 www.nginx-test.com/match_all/ 时才会匹配到/usr/share/nginx/html/match_all/index.html</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/match_all/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;"> /usr/share/nginx/html</span></span>
<span class="line"><span style="color:#A6ACCD;">      index index.html</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 当访问 www.nginx-test.com/1.jpg 等路径时会去 /usr/share/nginx/images/1.jpg 找对应的资源</span></span>
<span class="line"><span style="color:#A6ACCD;">  location </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\\.(jpeg|jpg|png|svg)$ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    root /usr/share/nginx/images</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 当访问 www.nginx-test.com/bbs/ 时会匹配上 /usr/share/nginx/html/bbs/index.html</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^~</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bbs/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;">index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="匹配优先级" tabindex="-1">匹配优先级 <a class="header-anchor" href="#匹配优先级" aria-hidden="true">#</a></h3><p>Nginx <code>location</code> 的大致匹配顺序：</p><ul><li>精确匹配的路径和两类前缀匹配的路径（字母序，如果某个精确匹配的路径的名字和前缀匹配的路径相同，精确匹配的路径排在前面）</li><li>正则路径（出现序）</li><li>命名路径（字母序）</li><li>无名路径（出现序）</li></ul><h3 id="反斜线" tabindex="-1">反斜线 <a class="header-anchor" href="#反斜线" aria-hidden="true">#</a></h3><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/test </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/test/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>不带 <code>/</code> 当访问 <code>www.nginx-test.com/test</code> 时，Nginx 先找是否有 <code>test</code> 目录，如果有则找 <code>test</code> 目录下的 <code>index.html</code>；如果没有 <code>test</code> 目录，Nginx 则会找是否有 <code>test</code> 文件</li><li>带 <code>/</code> 当访问 <code>www.nginx-test.com/test</code> 时，Nginx 先找是否有 <code>test</code> 目录，如果有则找 <code>test</code> 目录下的 <code>index.html</code>；如果没有它也不会去找是否存在 <code>test</code> 文件</li></ul><h3 id="alias" tabindex="-1">alias <a class="header-anchor" href="#alias" aria-hidden="true">#</a></h3><p>它也是指定静态资源目录位置，它只能写在 <code>location</code> 中。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/image </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> alias </span><span style="color:#A6ACCD;">/opt/nginx/static/image/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>当用户访问 <code>www.test.com/image/1.png</code> 时，实际在服务器找的路径是 <code>/opt/nginx/static/image/1.png</code>。</p><p><strong>注意</strong>：使用 <code>alias</code> 末尾一定要添加 <code>/</code>，并且它只能位于 <code>location</code> 中。</p><h3 id="return" tabindex="-1">return <a class="header-anchor" href="#return" aria-hidden="true">#</a></h3><p>停止处理请求，直接返回响应码或重定向到其他 URL；执行 <code>return</code> 指令后，<code>location</code> 中后续指令讲不会被执行。</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> code [text];</span></span>
<span class="line"><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> code URL;</span></span>
<span class="line"><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> URL;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 例如</span></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 直接返回状态码</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 返回状态码 + 一段文本</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">404</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&#39;page not found&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 返回状态码 + 重定向地址</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">302</span><span style="color:#A6ACCD;"> /bbs;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;"># 返回重定向地址</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> https://www.baidu.com;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="rewrite" tabindex="-1">rewrite <a class="header-anchor" href="#rewrite" aria-hidden="true">#</a></h3><p>根据指定正则表达式匹配规则，重写 <code>URL</code>。</p><p>仅可在 <code>servr</code>、<code>location</code> 或 <code>if</code></p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 语法</span></span>
<span class="line"><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> &lt;regexp&gt; &lt;content&gt; [flag]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># $1 是前面括号(.*\\.jpg)的反向引用</span></span>
<span class="line"><span style="color:#89DDFF;">rewirte</span><span style="color:#A6ACCD;"> /images/(.*</span><span style="color:#89DDFF;">\\.jpg)$ </span><span style="color:#A6ACCD;">/pic/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><code>flag</code> 可选值的含义：</p><ul><li><code>last</code>：重写后的 <code>URL</code> 发起新请求，再次进入 <code>server</code> 段，重试 <code>location</code> 中的匹配</li><li><code>break</code>：直接使用冲邂逅的 <code>URL</code>，不再匹配其他 <code>location</code> 中语句</li><li><code>redirect</code>：返回 302 临时重定向</li><li><code>permanent</code>：返回 301 永久重定向</li></ul><p>实例：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">server</span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#F07178;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;"># 要在本地 hosts 文件进行配置</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#F07178;">mrsingsing.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">location</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">/search </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">rewrite</span><span style="color:#F07178;"> ^/(.*) https://www.google.com </span><span style="color:#F78C6C;">redirect</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">location</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">/images </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">r</span><span style="color:#F07178;"> ewrite /images/(.*) /pics/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">location</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">/pics </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">rewrite</span><span style="color:#F07178;"> /pics/(.*) /photos/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">location</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">/photos </span><span style="color:#F07178;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  }</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"></span></code></pre></div><p>按照这个配置我们来分析：</p><ul><li>当访问 <code>fe.mrsingsing.club/search</code> 时，会自动帮我们重定向到 <code>https://www.google.com</code></li><li>当访问 <code>fe.mrsingsing.club/images/1.jpg</code> 时，第一步重写 <code>URL</code> 为 <code>fe.mrsingsing.club/pics/1.jpg</code>，找到 <code>pics</code> 的 <code>location</code>，继续重写 <code>URL</code> 为 <code>fe.mrsingsing.club/photos/1.jpg</code>，找到 <code>/photos</code> 的 <code>location</code> 后，去 <code>html/photos</code> 目录下寻找 <code>1.jpg</code> 静态资源</li></ul><h3 id="if-指令" tabindex="-1">if 指令 <a class="header-anchor" href="#if-指令" aria-hidden="true">#</a></h3><p><code>if</code> 指令仅存在于 <code>server</code> 和 <code>location</code> 块中</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 语法</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (condition) </span><span style="color:#F07178;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 示例</span></span>
<span class="line"><span style="color:#A6ACCD;">if($</span><span style="color:#89DDFF;">http_user_agent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;"> Chrome) {</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">rewrite</span><span style="color:#A6ACCD;"> /(.*)/browser/</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1 </span><span style="color:#F78C6C;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p><code>condition</code> 判断条件：</p><ul><li><code>$variable</code> 仅为变量时，值为空或以 0 开头字符串都会被当做 <code>false</code> 处理</li><li><code>=</code> 或 <code>!=</code> 相等或不等</li><li><code>~</code> 正则匹配</li><li><code>!~</code> 非正则匹配</li><li><code>~*</code> 正则匹配，不区分大小写</li><li><code>-f</code> 或 <code>! -f</code> 检测文件存在或不存在</li><li><code>-d</code> 或 <code>! -d</code> 检测目录存在或不存在</li><li><code>-e</code> 或 <code>! -e</code> 检测文件、目录、符号链接等存在或不存在</li><li><code>-x</code> 或 <code>! -x</code> 检测文件可以执行或不可执行</li></ul><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">8080</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> ( </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">uri </span><span style="color:#89DDFF;">= </span><span style="color:#C3E88D;">&quot;/images/&quot;</span><span style="color:#A6ACCD;"> ) </span><span style="color:#F07178;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">rewrite</span><span style="color:#F07178;"> (.*) /pics/ </span><span style="color:#F78C6C;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>当访问 <code>localhost:8080/images/</code> 时，会进入 <code>if</code> 判断里面执行 <code>rewrite</code> 命令。</p><h3 id="autoindex" tabindex="-1">autoindex <a class="header-anchor" href="#autoindex" aria-hidden="true">#</a></h3><p>用户请求以 <code>/</code> 结尾时，列出目录结构，可以用于快速搭建静态资源下载网站。</p><p>配置实例：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">mrsingsing.com</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/download/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">/opt/source</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 打开 autoindex，，可选参数有 on | off</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> autoindex </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 修改为 off，以KB、MB、GB 显示文件大小，默认为 on，以 bytes 显示出⽂件的确切⼤⼩</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> autoindex_exact_size </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 以 html 的方式进行格式化，可选参数有 html | json | xml</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> autoindex_format </span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;"># 显示的⽂件时间为⽂件的服务器时间。默认为 off，显示的⽂件时间为 GMT 时间</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> autoindex_localtime </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><p>当访问 <a href="http://mrsingsing.com/download/" target="_blank" rel="noreferrer">mrsingsing.com/download/</a> 时，会把服务器 /opt/source/download/ 路径下的文件展示出来。</p><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-hidden="true">#</a></h2><p>Nginx 可以使用变量简化配置与提高配置的灵活性，所有的变量值都可以通过这种方式引用：</p><ul><li>自定义变量</li><li>内置预定义变量</li></ul><h3 id="自定义变量" tabindex="-1">自定义变量 <a class="header-anchor" href="#自定义变量" aria-hidden="true">#</a></h3><p>可以在 <code>server</code>、<code>http</code>、<code>location</code> 等标签中使用 <code>set</code> 命令（非唯一）声明变量，语法如下：</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">set $</span><span style="color:#A6ACCD;">variable value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>注意 Nginx 中的变量必须都以 <code>$</code> 开头。</p><h3 id="内置预定义变量" tabindex="-1">内置预定义变量 <a class="header-anchor" href="#内置预定义变量" aria-hidden="true">#</a></h3><p>列出常用的 Nginx 内置变量：</p><table><thead><tr><th style="text-align:left;">变量</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>$args</code></td><td style="text-align:left;">这个变量等于 <code>GET</code> 请求中的所有参数,所以是复数带有 s。例如，<code>foo=123&amp;bar=blahblah;</code> 这个变量只可以被修改</td></tr><tr><td style="text-align:left;"><code>$arg_param</code></td><td style="text-align:left;">获取 <code>GET</code> 请求中 <code>param</code> 参数的值。如 <code>/index.html?order=111</code>, 则 <code>$arg_order=111</code></td></tr><tr><td style="text-align:left;"><code>$binary_remote_addr</code></td><td style="text-align:left;">二进制码形式的客户端地址</td></tr><tr><td style="text-align:left;"><code>$body_bytes_sent</code></td><td style="text-align:left;">已发送的消息体字节数</td></tr><tr><td style="text-align:left;"><code>$content_length</code></td><td style="text-align:left;">HTTP 请求信息里的 <code>Content-Length</code></td></tr><tr><td style="text-align:left;"><code>$content_type</code></td><td style="text-align:left;">请求信息里的 <code>Content-Type</code></td></tr><tr><td style="text-align:left;"><code>$document_root</code></td><td style="text-align:left;">针对当前请求的根路径设置值</td></tr><tr><td style="text-align:left;"><code>$document_uri</code></td><td style="text-align:left;">与 <code>$uri</code> 相同</td></tr><tr><td style="text-align:left;"><code>$host</code></td><td style="text-align:left;">请求信息中的 <code>Host</code>，如果请求中没有 <code>Host</code> 行，则等于设置的服务器名;</td></tr><tr><td style="text-align:left;"><code>$http_cookie</code></td><td style="text-align:left;">Cookie 信息</td></tr><tr><td style="text-align:left;"><code>$http_referer</code></td><td style="text-align:left;">来源地址</td></tr><tr><td style="text-align:left;"><code>$http_user_agent</code></td><td style="text-align:left;">客户端代理信息</td></tr><tr><td style="text-align:left;"><code>$http_via</code></td><td style="text-align:left;">最后一个访问服务器的 IP 地址</td></tr><tr><td style="text-align:left;"><code>$http_x_forwarded_for</code></td><td style="text-align:left;">相当于网络访问路径。</td></tr><tr><td style="text-align:left;"><code>$limit_rate</code></td><td style="text-align:left;">对连接速率的限制</td></tr><tr><td style="text-align:left;"><code>$remote_addr</code></td><td style="text-align:left;">客户端 <code>IP</code> 地址</td></tr><tr><td style="text-align:left;"><code>$remote_port</code></td><td style="text-align:left;">客户端端口号</td></tr><tr><td style="text-align:left;"><code>$remote_user</code></td><td style="text-align:left;">客户端用户名，认证用</td></tr><tr><td style="text-align:left;"><code>$request</code></td><td style="text-align:left;">用户请求信息</td></tr><tr><td style="text-align:left;"><code>$request_body</code></td><td style="text-align:left;">用户请求主体</td></tr><tr><td style="text-align:left;"><code>$request_body_file</code></td><td style="text-align:left;">发往后端的本地文件名称</td></tr><tr><td style="text-align:left;"><code>$request_filename</code></td><td style="text-align:left;">当前请求的文件路径名</td></tr><tr><td style="text-align:left;"><code>$request_method</code></td><td style="text-align:left;">请求的方法，比如 <code>GET</code>、<code>POST</code> 等</td></tr><tr><td style="text-align:left;"><code>$request_uri</code></td><td style="text-align:left;">请求的 URI，带参数</td></tr><tr><td style="text-align:left;"><code>$server_addr</code></td><td style="text-align:left;">服务器地址，如果没有用 listen 指明服务器地址，使用这个变量将发起一次系统调用以取得地址(造成资源浪费)</td></tr><tr><td style="text-align:left;"><code>$server_name</code></td><td style="text-align:left;">请求到达的服务器名</td></tr><tr><td style="text-align:left;"><code>$server_port</code></td><td style="text-align:left;">请求到达的服务器端口号</td></tr><tr><td style="text-align:left;"><code>$server_protocol</code></td><td style="text-align:left;">请求的协议版本，<code>HTTP/1.0</code> 或 <code>HTTP/1.1</code></td></tr><tr><td style="text-align:left;"><code>$uri</code></td><td style="text-align:left;">请求的 URI，可能和最初的值有不同，比如经过重定向之类的</td></tr></tbody></table>`,160),p=[o];function t(c,r,i,d,y,C){return a(),n("div",null,p)}const F=s(e,[["render",t]]);export{A as __pageData,F as default};
