import{_ as t,c as d,o as e,a as r}from"./app.169c26a5.js";const u=JSON.parse('{"title":"docker","description":"","frontmatter":{},"headers":[{"level":2,"title":"docker 常用命令","slug":"docker-常用命令","link":"#docker-常用命令","children":[]},{"level":2,"title":"Dockerfile 命令","slug":"dockerfile-命令","link":"#dockerfile-命令","children":[]}],"relativePath":"docker/index.md"}'),a={name:"docker/index.md"},s=r(`<h1 id="docker" tabindex="-1">docker <a class="header-anchor" href="#docker" aria-hidden="true">#</a></h1><h2 id="docker-常用命令" tabindex="-1">docker 常用命令 <a class="header-anchor" href="#docker-常用命令" aria-hidden="true">#</a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>docker pull</td><td>获取 image</td></tr><tr><td>docker build</td><td>创建 image</td></tr><tr><td>docker images</td><td>列出 image</td></tr><tr><td>docker rmi</td><td>删除 image</td></tr><tr><td>docker run</td><td>运行 container</td></tr><tr><td>docker ps</td><td>列出 container</td></tr><tr><td>docker rm</td><td>删除 container</td></tr><tr><td>docker cp</td><td>在 host 和 container 之间拷贝文件</td></tr><tr><td>docker commit</td><td>保存改动为新的 image</td></tr></tbody></table><h2 id="dockerfile-命令" tabindex="-1">Dockerfile 命令 <a class="header-anchor" href="#dockerfile-命令" aria-hidden="true">#</a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>FROM</td><td>base image</td></tr><tr><td>RUN</td><td>执行命令</td></tr><tr><td>ADD</td><td>添加文件</td></tr><tr><td>COPY</td><td>拷贝文件</td></tr><tr><td>CMD</td><td>执行命令</td></tr><tr><td>EXPOSE</td><td>暴露端口</td></tr><tr><td>WORKDIR</td><td>指定路径</td></tr><tr><td>MAINTAINER</td><td>维护者</td></tr><tr><td>ENV</td><td>设定环境变量</td></tr><tr><td>ENTERPOINT</td><td>容器入口</td></tr><tr><td>USER</td><td>指定用户</td></tr><tr><td>VOLUME</td><td>mount point</td></tr></tbody></table><ol><li>如何进入、推出容器</li></ol><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#在 container 中启动一个 bash shell</span></span>
<span class="line"><span style="color:#A6ACCD;">docker </span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;"> -it containerId /bin/bash</span></span>
<span class="line"><span style="color:#676E95;">#推出容器</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>如何从容器拷贝文件到宿主</li></ol><ul><li>docker cp [OPTIONS] [CONTAINER_ID]:[SRC_PATH] [DEST_PATH]</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker cp 40af075f65eb:/etc/nginx/nginx.conf /usr/local/etc/nginx/conf.d</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,10),n=[s];function o(c,l,i,p,h,k){return e(),d("div",null,n)}const b=t(a,[["render",o]]);export{u as __pageData,b as default};
